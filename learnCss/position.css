/* static -default */

div {
    width: 50px;
    height: 50px;
    background-color: orange;
    border: 2px solid red;
    text-align: center;
}

/* Select the first <div> */
div:nth-child(1) {
    position: static;
    /* The element is positioned according to the normal flow of the document. The top, right, bottom, left, and z-index properties have no effect. This is the default value.  */



}

/* Select the second <div> */
div:nth-child(2) {
    position: relative;

    /* offset relative to itself based on the values of top, right, bottom, and left. The offset does not affect the position of any other elements; thus, the space given for the element in the page layout is the same as if position were static. */
    top: 10px;
    left: 10px;

}

/* Select the third <div> */

.third {
    position: absolute;

    /* The element is removed from the normal document flow, and no space is created for the element in the page layout. The element is positioned relative to its closest positioned ancestor (if any) or to the initial containing block. Its final position is determined by the values of top, right, bottom, and left. */
    right: 0;
    top: 0;


}

/* Select the fourth <div> */
.fourth {
    /* used to create sticky navbar */
    /* here in ex  position: sticky; when  top: 0; while scrolling */
    position: sticky;
    top: 0;
}

.fifth {

    position: fixed;
    right: 0;
    /* Fixed position; never moves on scroll */
    /* The element is removed from the normal document flow, and no space is created for the element in the page layout. The element is positioned relative to its initial containing block (initial position), which is the viewport in the case of visual media. Its final position is determined by the values of top, right, bottom, and left. */

}

/* In CSS, the term "closest positioned ancestor" refers to the nearest ancestor element of a given element that has a CSS positioning other than the default position: static; */